#------------------------------------------------------------------------------
#
# NAME:
#       make.macros
#
# PURPOSE:
#       Unix make utility include file for definition of various make flags
#
# LANGUAGE:
#       Unix make
#
# CALLING SEQUENCE:
#       include make.macros
#
# CREATION HISTORY:
#       Written by:     Paul van Delst, CIMSS/SSEC 08-Jun-2000
#                       paul.vandelst@ssec.wisc.edu
#
#  Copyright (C) 2000 Paul van Delst
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#------------------------------------------------------------------------------

#################################################################################
#                                                                               #
#                        GENERAL USE MACRO SPECIFICATION                        #
#                                                                               #
#################################################################################

# --------------------
# Define default shell
# --------------------

SHELL = /bin/sh


# -------------------------------------
# Define link, copy and delete commands
# -------------------------------------

LINK = ln -sf
COPY = cp -v 
MOVE = mv -f
REMOVE = rm -f


# -------------------------
# Define tarballer commands
# -------------------------

TARBALLER = tar
TARBALL_CREATE = $(TARBALLER) cvhf
TARBALL_APPEND = $(TARBALLER) rvhf
TARBALL_EXTRACT = $(TARBALLER) xvhf


# -------------------------
# Define archiver and flags
# -------------------------

ARCHIVER = ar
ARCHIVER_FLAGS = crvs
ARCHIVE_NAME =


# ---------------------------------------
# Default include and library definitions
# ---------------------------------------

INCLUDES = 
LIBRARIES =  

# Note that for precompiled module files (e.g. netcdf.mod 
# from the NetCDF library) different compilers use different 
# switches for including Fortran90/95 .mod files
#   SunOS:              -Mdir
#   AIX:                -Idir
#   IRIX64:             -Idir
#   Linux, PGI Fortran: -Idir
# 
# **NOTE**: Linux PGI Fortran also has a switch "-module dir" which
#           causes compiled .mod files to be WRITTEN to the directory
#           defined by dir.
#
# So if you're working on a Sun platform, you will need to add the
# extra switch (-M) to include precompiled Fortran90/95 module files
# (e.g. .M, .m, .mod, or .MOD files).



#################################################################################
#                                                                               #
#                      SPECIFIC PLATFORM FLAG SPECIFICATION                     #
#                                                                               #
#################################################################################

# --------------
# Sun Fortran 95
# --------------

SUNOS_COMMON_FLAGS = 
SUNOS_FLAGS = "FC=f95" \
	      "FL=f95" \
	      "FC_FLAGS= -ansi \
                         -c \
                         -C \
                         -fsimple=0 \
                         -ftrap=overflow,division \
                         -g \
                         -w3 \
                         ${INCLUDES} \
                         ${SUNOS_COMMON_FLAGS}" \
	      "FL_FLAGS= ${SUNOS_COMMON_FLAGS} \
                         ${LIBRARIES} \
                         -o" \
              "ENDIAN=Big_Endian"


# ----------------------
# IBM AIX xlf95 compiler
# ----------------------

AIX_COMMON_FLAGS_Regular = 
AIX_FLAGS_Regular = "FC=xlf95" \
	            "FL=xlf95" \
	            "FC_FLAGS= -c \
                               -qcheck \
                               -qdbg \
                               -qextchk \
                               -qfloat=nomaf:rndsngl \
                               -qflttrap=ov:zero:inv \
                               -qfree=f90 \
                               -qhalt=W \
                               -qlanglvl=95pure \
                               -qmaxmem=-1 \
                               -qsuffix=f=f90:cpp=F90 \
                               ${INCLUDES} \
                               ${AIX_COMMON_FLAGS_Regular}" \
	            "FL_FLAGS= ${AIX_COMMON_FLAGS_Regular} \
                               ${LIBRARIES} \
                               -o" \
                    "ENDIAN=Big_Endian"

AIX_COMMON_FLAGS_SP_Prod = -O3
AIX_FLAGS_SP_Prod = "FC=xlf95" \
                    "FL=xlf95" \
                    "FC_FLAGS= -c \
                               -qdbg \
                               -qarch=pwr4 \
                               -qfree=f90 \
                               -qhalt=W \
                               -qlanglvl=95pure \
                               -qsuffix=f=f90:cpp=F90 \
                               -qstrict \
                               -NS32768 \
                               ${INCLUDES} \
                               ${AIX_COMMON_FLAGS_SP_Prod}" \
                    "FL_FLAGS= ${AIX_COMMON_FLAGS_SP_Prod} \
			       -lm \
                               ${LIBRARIES} \
                               -o" \
                    "ENDIAN=Big_Endian"

# -- Here switch between regular and SP Production compiler flags
AIX_FLAGS = $(AIX_FLAGS_SP_Prod)
#AIX_FLAGS = $(AIX_FLAGS_Regular)


# -------------------------------
# SGI IRIX64 MIPSpro f90 compiler
# -------------------------------

IRIX64_COMMON_FLAGS = -64
IRIX64_FLAGS = "FC=f90" \
	       "FL=f90" \
	       "FC_FLAGS= -ansi \
                          -c \
                          -C \
                          -DEBUG:suppress=399,878 \
                          -fullwarn \
                          -g \
                          -bytereclen \
                          -u \
                          ${INCLUDES} \
                          ${IRIX64_COMMON_FLAGS}" \
	       "FL_FLAGS= ${IRIX64_COMMON_FLAGS} \
                          ${LIBRARIES} \
                          -o" \
               "ENDIAN=Big_Endian"


# -------------------------------------
# Portland Group f95 compiler for linux
# -------------------------------------

Linux_COMMON_FLAGS_PGI_Regular = -Kieee
Linux_FLAGS_PGI_Regular = "FC=pgf90" \
                          "FL=pgf90" \
                          "FC_FLAGS= -c \
                                     -g \
                                     -Ktrap=ovf,divz \
                                     -Mbounds \
                                     -Mchkstk \
                                     -Mdclchk \
                                     -Minform,inform \
                                     -Mnosave \
                                     -Mref_externals \
                                     -Mstandard \
                                     ${INCLUDES} \
                                     ${Linux_COMMON_FLAGS_PGI_Regular}" \
                          "FL_FLAGS= ${Linux_COMMON_FLAGS_PGI_Regular} \
                                     ${LIBRARIES} \
                                     -o" \
                          "FPP_FLAGS= " \
                          "ENDIAN=Little_Endian"

Linux_COMMON_FLAGS_PGI_Optimised = 
Linux_FLAGS_PGI_Optimised = "FC=pgf90" \
                            "FL=pgf90" \
                            "FC_FLAGS= -c \
                                       -fast \
                                       ${INCLUDES} \
                                       ${Linux_COMMON_FLAGS_PGI_Optimised}" \
                            "FL_FLAGS= ${Linux_COMMON_FLAGS_PGI_Optimised} \
                                       ${LIBRARIES} \
                                       -o" \
                            "FPP_FLAGS= " \
                            "ENDIAN=Little_Endian"

# -- Here switch between regular and optimised PGI flags
Linux_FLAGS_PGI = $(Linux_FLAGS_PGI_Optimised)
#Linux_FLAGS_PGI = $(Linux_FLAGS_PGI_Regular)


# -----------------------------
# Absoft f90 compiler for linux
# -----------------------------

Linux_COMMON_FLAGS_Absoft = 
Linux_FLAGS_Absoft = "FC=f90" \
                     "FL=f90" \
                     "FC_FLAGS= -c \
                                -B80 \
                                -en \
                                -g \
                                -m0 \
                                ${INCLUDES} \
                                ${Linux_COMMON_FLAGS_Absoft}" \
                     "FL_FLAGS= ${Linux_COMMON_FLAGS_Absoft} \
                                ${LIBRARIES} \
                                -o" \
                     "FPP_FLAGS= " \
                     "ENDIAN=Little_Endian"


# ----------------------------
# Intel F95 compiler for linux
# ----------------------------

Linux_COMMON_FLAGS_Intel =
Linux_FLAGS_Intel_Optimised = "FC=ifort" \
	                      "FL=ifort" \
	                      "FC_FLAGS= -c \
                                         -g \
                                         -O2 \
                                         -free \
      	                                 -assume byterecl \
                                         ${INCLUDES} \
                                         ${Linux_COMMON_FLAGS_Intel}" \
	                      "FL_FLAGS= ${Linux_COMMON_FLAGS_Intel} \
                                         ${LIBRARIES} \
                                         -o" \
                              "ENDIAN=Little_Endian"

Linux_FLAGS_Intel_Regular = "FC=ifort" \
                            "FL=ifort -pg" \
                            "FC_FLAGS= -c \
                                       -p \
                                       -g \
                                       -check bounds \
                                       -traceback \
                                       -warn errors \
                                       -free \
                                       -assume byterecl \
                                       -fp-stack-check \
                                       -mieee-fp \
                                       ${INCLUDES} \
                                       ${Linux_COMMON_FLAGS_Intel}" \
                            "FL_FLAGS= ${Linux_COMMON_FLAGS_Intel} \
                                       ${LIBRARIES} \
                                       -o" \
                            "ENDIAN=Little_Endian"

# -- Here switch between regular and optimised Intel flags
Linux_FLAGS_Intel = $(Linux_FLAGS_Intel_Optimised)
#Linux_FLAGS_Intel = $(Linux_FLAGS_Intel_Regular)


# ----------------------------
# Lahey F95 compiler for linux
# ----------------------------

Linux_COMMON_FLAGS_Lahey =
Linux_FLAGS_Lahey = "FC=lf95" \
	            "FL=lf95" \
	            "FC_FLAGS= -c \
                               -g \
                               --chk aesu \
                               ${INCLUDES} \
                               ${Linux_COMMON_FLAGS_Lahey}" \
	            "FL_FLAGS= ${Linux_COMMON_FLAGS_Lahey} \
                               ${LIBRARIES} \
                               -o" \
                    "ENDIAN=Little_Endian"


# ----------------------
# g95 compiler for linux
# ----------------------

Linux_COMMON_FLAGS_g95 =
Linux_FLAGS_g95 = "FC=g95" \
	          "FL=g95" \
	          "FC_FLAGS= -c \
			     -fno-second-underscore \
                             ${INCLUDES} \
                             ${Linux_COMMON_FLAGS_g95}" \
	          "FL_FLAGS= ${Linux_COMMON_FLAGS_g95} \
                             ${LIBRARIES} \
                             -o" \
                  "ENDIAN=Little_Endian"



# ---------------------------
# gfortran compiler for linux
# ---------------------------

# The compiler and linker name
# make sure gfortran supports access='stream' specifier
NAME_GFORTRAN = gfortran

# Compiler settings for DEBUG builds
LINUX_COMMON_FLAGS_GFORTRAN_DEBUG = -pg
LINUX_FLAGS_GFORTRAN_DEBUG = "FC=${NAME_GFORTRAN}" \
	                     "FL=${NAME_GFORTRAN}" \
	                     "FC_FLAGS= -c \
                                        -fbounds-check \
                                        -ffpe-trap=overflow,zero \
                                        -ffree-form \
                                        -fno-second-underscore \
                                        -frecord-marker=4 \
                                        -ggdb \
	                                -static \
                                        -Wall \
                                        ${INCLUDES} \
                                        ${LINUX_COMMON_FLAGS_GFORTRAN_DEBUG}" \
	                     "FL_FLAGS= ${LINUX_COMMON_FLAGS_GFORTRAN_DEBUG} \
                                        ${LIBRARIES} \
                                        -o" \
                             "ENDIAN=Little_Endian"

# Compiler settings for DEBUG builds
LINUX_COMMON_FLAGS_GFORTRAN_PROD =
LINUX_FLAGS_GFORTRAN_PROD = "FC=${NAME_GFORTRAN}" \
	                    "FL=${NAME_GFORTRAN}" \
	                    "FC_FLAGS= -c \
                                       -O3 \
                                       -ffast-math \
                                       -ffree-form \
                                       -fno-second-underscore \
                                       -frecord-marker=4 \
                                       -funroll-loops \
                                       -ggdb \
	                               -static \
                                       -w \
                                       ${INCLUDES} \
                                       ${LINUX_COMMON_FLAGS_GFORTRAN_PROD}" \
	                    "FL_FLAGS= ${LINUX_COMMON_FLAGS_GFORTRAN_PROD} \
                                       ${LIBRARIES} \
                                       -o" \
                            "ENDIAN=Little_Endian"

# Here set the DEFAULT gfortran compiler flags
#Linux_FLAGS_gfortran = $(LINUX_FLAGS_GFORTRAN_DEBUG)
Linux_FLAGS_gfortran = $(LINUX_FLAGS_GFORTRAN_PROD)


# ------------------------------
# Define the default Linux flags
# ------------------------------

#Linux_FLAGS = $(Linux_FLAGS_PGI)
Linux_FLAGS = $(Linux_FLAGS_Intel)
#Linux_FLAGS = $(Linux_FLAGS_Lahey)
#Linux_FLAGS = $(Linux_FLAGS_g95)
#Linux_FLAGS = $(Linux_FLAGS_gfortran)



#-------------------------------------------------------------------------------
#                          -- MODIFICATION HISTORY --
#-------------------------------------------------------------------------------
#
# $Id: make.macros,v 1.19 2004/12/10 21:46:59 paulv Exp $
#
# $Date: 2004/12/10 21:46:59 $
#
# $Revision: 1.19 $
#
# $Name:  $
#
# $State: Exp $
#
# $Log: make.macros,v $
# Revision 1.19  2004/12/10 21:46:59  paulv
# - Added some extra compiler switch options.
#
# Revision 1.18  2004/07/20 15:50:46  paulv
# - Made the Lahey compiler the Linux default.
#
# Revision 1.17  2004/07/02 21:24:32  paulv
# - Removed the "invalid" floating point traps from PGI and Sun.
# - Added g95 linux entry.
#
# Revision 1.16  2004/06/21 19:24:20  paulv
# - Added entries for Intel and Lahey linux f95 compilers.
#
# Revision 1.15  2004/03/09 17:28:38  paulv
# - Updated some compiler flag selections.
#
# Revision 1.14  2003/09/16 15:14:01  paulv
# - Added -Mnosave to PGI compiler compile switch list.
#
# Revision 1.13  2003/09/09 21:00:41  paulv
# - Added -qstrict and -NS32768 options to the SP prod list.
#
# Revision 1.12  2003/09/09 20:57:08  paulv
# - Added SP Production compile flag with scalar MASS library in link flags.
# - Removed the -Mprof flag from the PGI list.
#
# Revision 1.11  2003/04/08 22:35:28  paulv
# - Added SGI -DEBUG options.
#
# Revision 1.10  2003/02/12 19:27:42  paulv
# - Default for IRIX is now to generate 64-bit objects.
#
# Revision 1.9  2002/08/27 19:31:50  paulv
# - Temporarily removed the -Mbounds option for pgf90 as v4.0-2 apparently
#   generates spurious bounds exceptions.
#
# Revision 1.8  2002/04/08 17:32:40  paulv
# - Added macro definitions and rules for preprocessing .F90 files.
#
# Revision 1.7  2001/11/08 15:16:28  paulv
# - Replaced all the removed INVALID floating point exception specifiers.
# - Added the -ansi and -DEBUG:[option...] compiler options to the SGI list.
#
# Revision 1.6  2001/11/07 21:17:58  paulv
# - Removed invalid and underflow floating point exception flags from all
#   compiler flag macros. The underflow was for the same reason as described
#   in the previous log message. The invalid flag removal was to prevent
#   floating point exceptions occurring when using byte-swapping software.
#   Byte-swapping some "regular" numbers makes them appear invalid and thus
#   cause a core dump if the invalid flag is set.
#
# Revision 1.5  2001/09/27 19:51:10  paulv
# - Added header documentation.
# - Added some more comments regarding the "including" of precompiled
#   .mod files via the INCLUDES macro.
# - Removed the underflow trap from the -Ktrap options for the PGI compiler.
#   Including this check caused floating point exception errors in third
#   party software (LAPACK).
# - Added a generic Linux_FLAGS macros definition so if the linux compiler
#   changes the makefile itself doesn't need to be changed.
# - Added RCS keyword list.
#
# Revision 1.4 2001/09/13 14:55:48  paulv
# - Removed definitions for generic includes and libraries. Also removed
#   MOD_INCLUDES definition to prevent mod files being written to another
#   directory (in some compilers)
# - Added ENDIAN flag definition to the compiler/platform definitions.
# - Added floating point exception flags to the PGI compiler options.
# - Removed -qundef compiler option from AIX list. Using this option always
#   produced warnings on AIX systems that the compiler may reject standard
#   compliant code.
#
# Revision 1.3  2001/05/09 21:10:03  paulv
# - Added some new definitions and documentation.
#
# Revision 1.2  2000/07/26 20:48:31  paulv
# - Separated the common flags definitions from the platform definitions. It
#   appears you can't define and use macros in the same definitions statement.
# - Added LINK macro
#
# Revision 1.1  2000/06/08 19:30:24  paulv
# Initial checked in version
#
#
