;***********************************************************************************************
;  
; To plot collocated EDR and DEP parameters. Based on P2P collocated data generated by
; interEdr.f90 and interDep.f90. The counter-part is intergrid.pro, which use gridded
; data set( generated by gridEdr.f90 and gridDep.f90) to do inter-comparison.
;
; 	- scattered plot  
;	- maps
;	- maps of difference
;	- hist of difference
;	- angle dependency asymmetry
;	- vertical mean bias and stdv distribution of temp and wv
;
;	Wanchun Chen <Wanchun.Chen@noaa.gov>
;	
;	02/01/2011
;
;***********************************************************************************************

@../../../setup/paths_idl.pro

PRO interp2p,nameList=namelist

;***********************************************************************************************
; identifiers to be read from namelist 
;***********************************************************************************************
satId1='n18'
satId2='n19'
dirP2p='/disk1/pub/mirs_oper/data/TestbedData/Outputs/grid/n18_n19/2012-02-22/'
dirImg='./img/'
date='2012-02-22'
latmin=-90
latmax=90
lonmin=-180
lonmax=180
version='2934'

;---- this will get assigned from effective data size ----
NPOINT_AS=613420/4L ;  ls -l,then Tskin_as_size/4
NPOINT_DS=584292/4L ;  ls -l,then Tskin_ds_size/4

fromNameList=1
if ( fromNameList eq 1 ) then begin
  openr,iu,namelist,/get_lun 
  readf,iu,format='(a)',satId1		       	;Satellite ID 1
  readf,iu,format='(a)',satId2		       	;Satellite ID 2
  readf,iu,format='(a)',dirP2p	       	        ;P2P data dir
  readf,iu,format='(a)',dirImg  	       	;path where to put image files
  readf,iu,format='(a)',date		       	;file extension of image
  readf,iu,format='(f)',latmin              	;min lat
  readf,iu,format='(f)',latmax              	;max lat
  readf,iu,format='(f)',lonmin              	;min lon
  readf,iu,format='(f)',lonmax              	;max lon
  readf,iu,format='(a)',version    		;version number
  readf,iu,format='(i)',NPOINT_AS    		;Asc numbers
  readf,iu,format='(i)',NPOINT_DS    		;Des numbers
  free_lun,iu,/force
endif

help,NPOINT_AS,NPOINT_DS 

year  = FIX(strmid(date,0,4))
month = FIX(strmid(date,5,2))
day   = FIX(strmid(date,8,2))

jday=0
cal2jday,year,month,day,jday
;print,jday

jday_min = jday - 0.5
jday_max = jday + 1.5
;print,jday_min

yyyymmdd=strmid(date,0,4)+strmid(date,5,2)+strmid(date,8,2)

pair = satId1+'_'+satId2

prefix1='mirs_adv_poes_'+satId1+'_amsuamhs_glb_p2p_'
prefix2='mirs_adv_poes_'+satId2+'_amsuamhs_glb_p2p_'

prefix_corr    = 'mirs_adv_poes_'+satId1+'_'+satId2+'_glb_p2p_'
prefix_bias    = 'mirs_adv_poes_'+satId1+'_'+satId2+'_bias_glb_p2p_'
prefix_hist    = 'mirs_adv_poes_'+satId1+'_'+satId2+'_hist_glb_p2p_'
prefix_asym    = 'mirs_adv_poes_'+satId1+'_'+satId2+'_asym_glb_p2p_'+yyyymmdd + '_'
prefix_scat    = 'mirs_adv_poes_'+satId1+'_'+satId2+'_scat_glb_p2p_'+yyyymmdd + '_'

if pair eq 'f16_f18' then begin
  prefix1        = 'mirs_adv_dmsp_'+satId1+'_ssmis_glb_p2p_'
  prefix2        = 'mirs_adv_dmsp_'+satId2+'_ssmis_glb_p2p_'
  prefix_corr    = 'mirs_adv_dmsp_'+satId1+'_'+satId2+'_glb_p2p_'
  prefix_bias    = 'mirs_adv_dmsp_'+satId1+'_'+satId2+'_bias_glb_p2p_'
  prefix_hist    = 'mirs_adv_dmsp_'+satId1+'_'+satId2+'_hist_glb_p2p_'
  prefix_asym    = 'mirs_adv_dmsp_'+satId1+'_'+satId2+'_asym_glb_p2p_'+yyyymmdd + '_'
  prefix_scat    = 'mirs_adv_dmsp_'+satId1+'_'+satId2+'_scat_glb_p2p_'+yyyymmdd + '_'
endif


if pair eq 'n18_npp' or pair eq 'n19_npp' or pair eq 'metopA_npp' or pair eq 'metopB_npp' then begin
  prefix2        = 'mirs_adv_npoess_'+satId2+'_atms_glb_p2p_'
endif


dataPrefix='p2p_collocate_'

;---- plus minus sign stacked together
sign_pm = '!9' + String(43B) + '!X'

;---- chanIds ----
NCHAN0 = 20
chanIds  = ['23v','31v','50v','52v','53h','54h','54v','55h','57h1','57h2','57h3','57h4','57h5','57h6','89v1','89v2','157h','184h','186h','190v']
chanTxts = ['23.8 V','31.4 V','50.3 V','52.8 V',  '53.596'+sign_pm+'0.115 H','54.4 H','54.94 V','55.5 H',$
           '57.29 H',$
           '57.29'+sign_pm+'0.217 H',$
           '57.29'+sign_pm+'0.3222'+sign_pm+'0.048 H',$
           '57.29'+sign_pm+'0.3222'+sign_pm+'0.022 H',$
           '57.29'+sign_pm+'0.3222'+sign_pm+'0.010 H',$
           '57.29'+sign_pm+'0.3222'+sign_pm+'0.0045 H',$
           '89.0 V','89.0 V','157.0 H',$
	   '183.311'+sign_pm+'1.0 H','183.311'+sign_pm+'3.0 H','190.311 V']

if pair eq 'f16_f18' then begin
  NCHAN0 = 19
  chanIds  = ['57rc','59rc','150h','190h','186h','184h','19h','19v','22v','37h','37v','91v','91h','63rc','60rc1','60rc2','60rc3','60rc4','60rc5']
  chanTxts = ['57.29 RC', '59.4 RC', '150.0 H', $
              '183.31'+sign_pm+'6.6 H', '183.31'+sign_pm+'3 H', '183.31'+sign_pm+'1 H', $
	      '19.35 H', '19.35 V', '22.235 V', '37.0 H', '37.0 V',  $
              '91.655 V', '91.655 H', $
	      '63.283248'+sign_pm+'0.285271 RC', $
	      '60.792668'+sign_pm+'0.357892 RC', $
	      '60.792668'+sign_pm+'0.357892'+sign_pm+'0.002 RC',$
	      '60.792668'+sign_pm+'0.357892'+sign_pm+'0.006 RC',$
	      '60.792668'+sign_pm+'0.357892'+sign_pm+'0.016 RC',$
	      '60.792668'+sign_pm+'0.357892'+sign_pm+'0.050 RC' ] 
endif

if pair eq 'n18_npp' or pair eq 'n19_npp' or pair eq 'metopA_npp' or pair eq 'metopB_npp' then begin
  NCHAN0 = 13
  chanIds  = ['23v','31v','53h','54h','55h','57h1','57h2','57h3','57h4','57h5','57h6','184h','186h']
  chanTxts = [$
              '23.8 V',$
              '31.4 V',$
              '53.596'+sign_pm+'0.115 H',$
              '54.4 H',$
              '55.5 H',$
              '57.29 H',$
              '57.29'+sign_pm+'0.217 H',$
              '57.29'+sign_pm+'0.3222'+sign_pm+'0.048 H',$
              '57.29'+sign_pm+'0.3222'+sign_pm+'0.022 H',$
              '57.29'+sign_pm+'0.3222'+sign_pm+'0.010 H',$
              '57.29'+sign_pm+'0.3222'+sign_pm+'0.0045 H',$
              '183.311'+sign_pm+'1.0 H',$
              '183.311'+sign_pm+'3.0 H' ]
endif


;---- layer_ids ----
layer_ids = [ '100mb','200mb','300mb','400mb','500mb','600mb','700mb','800mb','850mb','900mb','950mb' ]

;---- Total number of points ----
MISSING = -999.0
NPOINT=[NPOINT_AS,NPOINT_DS]

;---- FOV size,used to plot different size of symbols in different scan position
NFOV=30
fov_sizes = fltarr(NFOV)
FOV_AMSUA,fov_sizes
if pair eq 'f16_f18' then fov_sizes(*) = 75.0

fov_scale = fltarr(NFOV)
fov_scale(*) = fov_sizes(*) / 48.0409 ; 48.0409 is near nadir FOV size
if pair eq 'f16_f18' then fov_scale(*) = 1.0


;---- base symbol and size in near nadir position ----
symbol     = 8
symbolsize = 0.6

thck	  = 0.7  ; char thick 
ioverplot = 0    ; over plot or not

cends    = [  'as',   'ds'   ,    'ad'     ]
cendTxts = [ ' Asc ',' Des ' ,' Combined ' ]
NCEND = 2

;---- asymmetry variables ----
NBIN = 12
BIN_BOX = 10 * indgen(NBIN) - 55  ; 10 degree BIN BOXES used
if pair eq 'f16_f18' then begin
  NBIN = 30
  BIN_BOX = indgen(NBIN)
endif

;---- surface tokens ----
sfcInts = [   0,      1,      2,     3,      4     ]
sfcIds  = [ 'sea',  'ice',  'lnd', 'snw',  'all'   ]
sfcTxts = [ 'Sea','Sea Ice','Land','Snow','Global' ]
NSFC    = N_ELEMENTS(sfcInts)
sfc_ids = ['sea','lnd','all']

;---- number of bin box to use in calling histogram ----
CONT_MIN = 200L

;---- number of bin box to use in calling histogram ----
NBINS_HIST = 200L

leg_as = "Ascending"
leg_ds = "Descending"


;###################################################################################################
;#
;#		1-D variables section
;#
;###################################################################################################
;---- default to POES ( N18/N19/Metop-A )
prodIds = [ 'tpw', 'clw', 'rr',  'gs', 'iwp', 'rwp', 'lwp', 'swe', 'sic', 'sicfy', 'sicmy', 'tskin', 'psfc', 'jday', 'angle', 'sfc', 'sfc2' ]
units   = [ 'mm',  'mm', 'mm/hr','mm', 'mm',  'mm',  'mm',  'cm',  '%',     '%',     '%',     'K',    'mb',   ' ',    'deg',   ' ',    ' '  ] 
minYs   = [  0,    0.0,    0.0,  0.3,   0.0,   0.0,   0.0,   0,     0,       0,       0,      200,    700,  jday_min,  -60,     0,      0   ]
maxYs   = [  70,   0.7,   10.0,  0.7,   0.2,   0.5,   0.7,   8,    100,     100,     100,     325,    1050, jday_max,  60,      3,      3   ]
divs    = [  14,    7,     5,     4,     4,     5,     7,    8,     10,      10,      10,      5,       7,     4,       12,     3,      3   ]
colors  = [  41,   41,    41,    33,    41,    41,    41,   33,     33,      33,      33,      33,     33,     33,      33,    33,     33   ]
fmts    = [ 'I2','F5.2','F4.1','F3.1','F5.2','F5.2','F5.2','I2',   'I3',    'I3',    'I3',    'I3',   'I4',  'F5.1',   'I3',   'I1',   'I1' ]
fmts    = '(' + fmts + ')'


prodNames = ['TPW','CLW','Rain Rate','Snow Grain Size Radius','Graupel Water Path',$
             'Rain Water Path','Liquid Water Path',$
             'Snow Water Equivalent','Sea Ice Concentration',$
             'First Year Sea Ice Concentration',$
	     'Multiple Year Sea Ice Concentration','Skin Temperature',$
             'Sfc Pressure','Scan Time','Scan Angle',$
	     'Pre-Classified Sfc Type','Post-Processed Sfc Type' ]

if pair eq 'f16_f18' or pair eq 'f18_f16' then begin
  prodIds = [ 'tpw', 'clw',  'rr',  'gs', 'iwp',  'rwp', 'lwp', 'swe', 'sic','sicfy','sicmy', 'tskin', 'psfc', 'jday', 'scanpos', 'sfc', 'sfc2' ]
  units   = [ 'mm',  'mm',  'mm/hr','mm', 'mm',   'mm',  'mm',  'cm',   '%',   '%',    '%',     'K',    'mb',   ' ',      ' ',     ' ',   ' '   ] 
  minYs   = [ 0,     0.0,    0.0,   0.3,   0.0,   0.0,    0.0,   0,     0,     0,      0,      200,    700,  jday_min,    0,       0,     0     ]
  maxYs   = [ 70,    0.7,   10.0,   0.7,   0.2,   0.5,    0.7,   8,    100,   100,    100,     325,   1050,  jday_max,    30,      3,     3     ]
  divs    = [ 14,     7,      5,      4,    4,     5,     7,     8,     10,    10,     10,      5,      7,      4,        6,       3,     3     ]
  colors  = [ 41,     41,     41,    33,    41,    41,    41,    33,    33,    33,     33,      33,     33,     33,       33,      33,    33    ]
  fmts    = [ 'I2', 'F5.2','F4.1', 'F3.1','F5.2', 'F5.2','F5.2', 'I2', 'I3',  'I3',   'I3',    'I3',   'I4',  'F5.1',    'I3',    'I1',  'I1'   ]
  fmts    = '(' + fmts + ')'

  prodNames = ['TPW','CLW','Rain Rate','Snow Grain Size Radius','Graupel Water Path',$
               'Rain Water Path','Liquid Water Path',$
               'Snow Water Equivalent','Sea Ice Concentration',$
               'First Year Sea Ice Concentration',$
	       'Multiple Year Sea Ice Concentration','Skin Temperature',$
               'Sfc Pressure','Scan Time','Scan Position',$
	       'Pre-Classified Sfc Type','Post-Processed Sfc Type' ]
endif


NPROD = N_ELEMENTS(prodIds)

;---- parameters related to difference

minYs_diff  = [  -10,   -0.2,     -5.0,    -0.1,   -0.2,    -0.2,   -0.2,   -4,    -10,   -10,   -10,   -10,  -100,    -4,    -60,   -6,     -6   ]
maxYs_diff  = [   10,   0.2,       5.0,     0.1,    0.2,     0.2,    0.2,    4,     10,    10,    10,    10,   100,     4,     60,    6,      6   ]
divs_diff   = [   10,   10,        10,      10,      10,      10,     10,    8,     10,    10,    10,    10,   10,      8,     12,    12,     12  ]
fmts_diff   = [ '(I3)','(F5.2)','(F4.1)','(F5.2)','(F5.2)','(F5.2)','(I2)','(I2)','(I3)','(I3)','(I3)','(I3)','(I4)','(F4.1)','(I3)','(I2)','(I2)']
colors_diff = replicate(33,NPROD)
	

;---- cend loop ----

FOR ICEND = 0,1 DO BEGIN

  NP2P = NPOINT(ICEND)

  LATS=fltarr(NP2P)
  LONS=fltarr(NP2P)
  SFCS1=fltarr(NP2P)
  SFCS2=fltarr(NP2P)
  SCANPOS=fltarr(NP2P)
  ANGLES=fltarr(NP2P)

  cend = cends(ICEND)
  cendTxt = cendTxts(ICEND)

  ;---- note: lat/lon/sfc/scanpos,are from sat1,shared(collocated)

  file=dirP2p+dataPrefix+satId1+'_'+yyyymmdd+'_lat_'+cend+'.dat'
  openr,lun,file,/get_lun,/Swap_Endian
  readu,lun,LATS
  close,lun
  Free_Lun,Lun

  file=dirP2p+dataPrefix+satId1+'_'+yyyymmdd+'_lon_'+cend+'.dat'
  openr,lun,file,/get_lun,/Swap_Endian
  readu,lun,LONS
  close,lun
  Free_Lun,Lun

  file=dirP2p+dataPrefix+satId1+'_'+yyyymmdd+'_sfc2_'+cend+'.dat'
  openr,lun,file,/get_lun,/Swap_Endian
  readu,lun,SFCS1
  close,lun
  Free_Lun,Lun

  file=dirP2p+dataPrefix+satId2+'_'+yyyymmdd+'_sfc2_'+cend+'.dat'
  openr,lun,file,/get_lun,/Swap_Endian
  readu,lun,SFCS2
  close,lun
  Free_Lun,Lun

  ; scan position starts from 1 thru 30
  file=dirP2p+dataPrefix+satId1+'_'+yyyymmdd+'_scanpos_'+cend+'.dat'
  openr,lun,file,/get_lun,/Swap_Endian
  readu,lun,SCANPOS
  close,lun
  Free_Lun,Lun

  file=dirP2p+dataPrefix+satId1+'_'+yyyymmdd+'_angle_'+cend+'.dat'
  openr,lun,file,/get_lun,/Swap_Endian
  readu,lun,ANGLES
  close,lun
  Free_Lun,Lun


  ;---- loop over products ----
  for iprod = 0,NPROD - 1 do begin
  ;;for iprod = 0,0 do begin
  
    prodId   = prodIds(iprod)
    prodName = prodNames(iprod)
    unit     = units(iprod)
    minY     = minYs(iprod)
    maxY     = maxYs(iprod)
    fmt      = fmts(iprod)
    div	     = divs(iprod)
    ctable   = colors(iprod)
    
    print, 'plotting ' + prodId + ' ' + cend
    
    title1=strupcase(satId1) + ' MIRS ' + prodName + cendTxt + date + ' (V' + version + ')'
    title2=strupcase(satId2) + ' MIRS ' + prodName + cendTxt + date + ' (V' + version + ')'
    title_diff = 'MIRS ' + strupcase(satId1) + ' - ' + strupcase(satId2) + ' ' + prodName $
               + cendTxt + date + ' (V' + version + ')'

    vals1 = fltarr(NP2P)
    file = dirP2p+dataPrefix+satId1+'_'+yyyymmdd+'_'+prodId+'_'+cend+'.dat'
    openr,lun,file,/get_lun,/Swap_Endian
    readu,lun,vals1
    close,lun
    Free_Lun,Lun

    vals2 = fltarr(NP2P)
    file = dirP2p+dataPrefix+satId2+'_'+yyyymmdd+'_'+prodId+'_'+cend+'.dat'
    openr,lun,file,/get_lun,/Swap_Endian
    readu,lun,vals2
    close,lun
    Free_Lun,Lun

 
    ;---- scattered plot ---------------------------------------------------------------------------
    for isfc = 0,NSFC - 1 do begin
      if isfc eq (NSFC-1) then ss = where( vals1 gt MISSING and vals2 gt MISSING,cnt )
      if isfc lt (NSFC-1) then ss = where( vals1 gt MISSING and vals2 gt MISSING and $
                                           SFCS1 eq isfc and SFCS2 eq isfc,cnt)
      if cnt gt CONT_MIN then begin
        title = cendTxt + sfcTxts(isfc) + ' ' + prodName + ' (' + unit + ') ' + date + ' (V' + version +')'
        img_name=dirImg+prefix_scat + prodId + '_' + sfcIds(isfc) + '_' + cend + '.png'
        plot_scatter,minYs(iprod),maxYs(iprod),minYs(iprod),maxYs(iprod),vals1(ss),vals2(ss),$
	             strupcase(satId1),strupcase(satId2),title,img_name,nticks=divs(iprod)
      endif
    endfor
    
    
    ;---- maps -------------------------------------------------------------------------------------
    for isfc = 0,2 do begin
      sfc = sfc_ids(isfc)
      if isfc eq 0 then ind = where( vals1 gt MISSING and vals2 gt MISSING and $
                              ( SFCS1 eq 0 or SFCS1 eq 1 ) and ( SFCS2 eq 0 or SFCS2 eq 1 ),cnt )
      if isfc eq 1 then ind = where( vals1 gt MISSING and vals2 gt MISSING and $
                              ( SFCS1 eq 2 or SFCS1 eq 3 ) and ( SFCS2 eq 2 or SFCS2 eq 3 ),cnt )
      if isfc eq 2 then ind = where( vals1 gt MISSING and vals2 gt MISSING,cnt )
      if (cnt gt CONT_MIN) then begin
	img_name = dirImg + prefix1 + yyyymmdd + '_' + prodId +'_' + sfc + '_' + cend + '.png'
	p2p_plot,latmin,latmax,lonmin,lonmax,minY,maxY,LATS,LONS,SCANPOS,vals1,ind,fov_scale,$
                 title1,unit,symbol,symbolsize,thck,ioverplot,fmt,div,$ 
                 img_name,color_table_index=ctable
	img_name = dirImg + prefix2 + yyyymmdd + '_' + prodId +'_' + sfc + '_' + cend + '.png'
	p2p_plot,latmin,latmax,lonmin,lonmax,minY,maxY,LATS,LONS,SCANPOS,vals2,ind,fov_scale,$
                 title2,unit,symbol,symbolsize,thck,ioverplot,fmt,div,$
                 img_name,color_table_index=ctable
      endif
    endfor

    ;---- maps of difference -----------------------------------------------------------------------
    vals=fltarr(NP2P)
    vals(*) = -999.0
    for i = 0L,NP2P - 1L do begin
      if vals1(i) ge 0 and vals2(i) ge 0 then vals(i) = vals1(i) - vals2(i) 
    endfor
    minY = minYs_diff(iprod)
    maxY = maxYs_diff(iprod)
    fmt  = fmts_diff(iprod)
    div	 = divs_diff(iprod)
    color_table_index = colors_diff(iprod)
    for isfc = 0,2 do begin
      sfc = sfc_ids(isfc)
      if isfc eq 0 then ind = where( vals1 gt MISSING and vals2 gt MISSING and $
                              ( SFCS1 eq 0 or SFCS1 eq 1 ) and ( SFCS2 eq 0 or SFCS2 eq 1 ),cnt )
      if isfc eq 1 then ind = where( vals1 gt MISSING and vals2 gt MISSING and $
                              ( SFCS1 eq 2 or SFCS1 eq 3 ) and ( SFCS2 eq 2 or SFCS2 eq 3 ),cnt )
      if isfc eq 2 then ind = where( vals1 gt MISSING and vals2 gt MISSING,cnt )
      if (cnt gt CONT_MIN) then begin
	img_name = dirImg + prefix_bias + yyyymmdd + '_' + prodId +'_' + sfc + '_' + cend + '.png'
	p2p_plot,latmin,latmax,lonmin,lonmax,minY,maxY,LATS,LONS,SCANPOS,vals,ind,fov_scale,$
                 title_diff,unit,symbol,symbolsize,thck,ioverplot,fmt,div,$
                 img_name,color_table_index=ctable
      endif		 
    endfor
    
    ;---- histogram of difference ------------------------------------------------------------------
    for isfc = 0, NSFC-1 do begin
      sfcId = sfcIds(isfc)
      sfcTxt = sfcTxts(isfc)
      if isfc lt NSFC-1 then begin
	ind = where( vals ge minY and vals le maxY and SFCS1 eq isfc and SFCS2 eq isfc,cnt )
      endif else begin
        ind = where( vals ge minY and vals le maxY and SFCS1 eq SFCS2, cnt ) 
      endelse

      xlength=(maxY-minY)*1.0/(NBINS_HIST*1.0)
      x=findgen(NBINS_HIST)*xlength+minY
      
      if( cnt gt NBINS_HIST ) then begin ; if-block 1 starts
        
	h_bias = vals(ind) 	
	h=Histogram(h_bias, NBINS=NBINS_HIST)
	h = h/float(total(h))*100.
	xrange=[minY ,maxY]
	mean_bias=mean(h_bias)
	file_as = dirP2p+'p2p_'+satId1+'_'+satId2+'_hist_'+yyyymmdd+'_'+prodId+'_'+sfcId+'_as.dat'
	
	if icend eq 0 then begin ; if-else-block 2 starts
	
          openw, lunw, file_as, /get_lun
          writeu, lunw, h
          free_lun, lunw
	  mean_as = mean_bias
	  
        endif else begin
	   
	  h_ds = h 
	  mean_ds = mean_bias
	  
	  is_file_exist = FILE_TEST(file_as)
	  if is_file_exist eq 1 then begin ; if-block 3 starts
      
      	    openr, lunr, file_as, /get_lun

	    ;Get file status. 
	    status = FSTAT(lunr) 

	    h_as = FLTARR(status.size / 4) 
	    readu, lunr, h_as  
	    free_lun, lunr

	    ; then delete saved ascending stat file 
	    FILE_DELETE, file_as

	    ymax = max([h_as,h_ds])
	    yrange=[0,ymax*1.05]

	    tit = 'MIRS '+strupcase(satId1)+' - '+strupcase(satId2)+' '+ prodName+ ' ('+unit+') '+date+' (V'+version +')'
	    xtit = 'Point-to-Point Collocated ' + prodName+' ( '+strupcase(satId1)+' - '+strupcase(satId2)+' ) Over ' + sfcTxt
	    ytit = 'Density (%) Over ' + sfcTxt
	    hist_png = dirImg + prefix_hist + yyyymmdd + '_' + prodId +'_' + sfcId + '_ad.png'

	    plot_hist_line2, x, h_as, h_ds, tit, xtit, ytit, hist_png, xrange, yrange, leg_as, leg_ds, mean_as, mean_ds

      	  endif  ; if-block 3 ends
      
        endelse ; if-else-block 2 ends
      
      endif ; if-block 1 ends
      	   
    endfor
    
    ;---- assymmetry angle/scan position dependence ------------------------------------------------
    asym=fltarr(NBIN,NSFC)
    file=dirP2p+dataPrefix+satId1+'_'+satId2+'_glb_asym_'+yyyymmdd+'_'+prodId+'_'+cend+'.dat'
    openr,lun,file,/get_lun,/Swap_Endian
    readu,lun,asym
    free_lun,lun

    stdv=fltarr(NBIN,NSFC)
    file=dirP2p+dataPrefix+satId1+'_'+satId2+'_glb_stdv_'+yyyymmdd+'_'+prodId+'_'+cend+'.dat'
    openr,lun,file,/get_lun,/Swap_Endian
    readu,lun,stdv
    free_lun,lun

    ;---- plot angle asymmetry ---- 
    xrange=[-60,60]
    xtitle='Local Zenith Angle (degree)'
    if satId1 eq 'f16' or satId1 eq 'f18' then begin
      xrange=[1,30]
      xtitle='Scan Position'
    endif
    
    yrange=[minYs_diff(iprod),maxYs_diff(iprod)]
    title='MIRS '+strupcase(satId1)+' - '+strupcase(satId2)+' '+prodName+' '+date+cendTxt+' (V'+version+')'

    ;-- all
    lndsea='all'
    ytitle=prodName +' Bias (' + unit + ') Over Globe'
    img_name=dirImg+prefix_asym+prodId+'_'+lndsea+'_'+cend+'.png'
    plot_line,BIN_BOX,asym(*,NSFC-1),xtitle,ytitle,title,xrange,yrange,img_name,stdv=stdv(*,NSFC-1)

    ;-- sea and ice together
    lndsea='sea'
    ytitle=prodName +' Bias (' + unit + ') Over Sea'
    img_name=dirImg+prefix_asym+prodId+'_'+lndsea+'_'+cend+'.png'
    plot_line2,BIN_BOX,asym(*,0),asym(*,1),xtitle,ytitle,title,xrange,yrange,$
               img_name,"Sea","Sea Ice",stdv1=stdv(*,0),stdv2=stdv(*,1)

    ;-- land and snow together
    lndsea='lnd'
    ytitle=prodName +' Bias (' + unit + ') Over Land'
    img_name=dirImg+prefix_asym+prodId+'_'+lndsea+'_'+cend+'.png'
    plot_line2,BIN_BOX,asym(*,2),asym(*,3),xtitle,ytitle,title,xrange,yrange,$
               img_name, "Land","Snow", stdv1=stdv(*,2),stdv2=stdv(*,3)

   endfor ; end loop over products

ENDFOR ; end loop over cends



;###################################################################################################
;#
;# 		2-D variable section
;#
;###################################################################################################

prodIds   = [     'em',         'tbu',       'tbc',     'temp',          'wv'      ]
units     = [     ' ',           'K',         'K',        'K',          'g/kg'     ] 
prodNames = [ 'Emissivity', 'UnCorr. TB', 'Corr. TB', 'Temperature', 'Water Vapor' ]

NPROD  = N_ELEMENTS(prodIds)
ctable = 33

;inds1 = indgen(NCHAN0)
;inds2 = indgen(NCHAN0)

;if pair eq 'f16_f18' then begin
;  inds1 = indgen(NCHAN0) + 5
;  inds2 = indgen(NCHAN0) + 5
;endif

;if pair eq 'n18_npp' or pair eq 'n19_npp' or pair eq 'metopA_npp' then begin
;  ind1s = [0, 1, 4, 5, 7, 8,  9, 10, 11, 12, 13, 17, 18]
;  ind2s = [0, 1, 5, 6, 8, 9, 10, 11, 12, 13, 14, 21, 19]
;endif


FOR IPROD = 0,NPROD - 1 DO BEGIN

  prodId   = prodIds(iprod)
  prodName = prodNames(iprod)
  unit     = units(iprod)
  
  print, 'plotting ' + prodId
  
  ;---- em related ---------------------------------------------------------------------------------
  if prodId eq 'em' then begin

    level_ids  = chanIds
    level_txts = chanTxts
    NLEV       = NCHAN0
    divs       = replicate(10,NLEV)
    fmts       = replicate('(f4.2)',NLEV)
  
    ;----( NCHAN0,NSFC ) -- default to POES-POES pair
    mins_sea  = [0.40,0.45,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.60,0.60,0.60,0.65,0.65,0.65]
    maxs_sea  = [0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95]
    mins_lnd  = [0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.60,0.60,0.60,0.60,0.60,0.60]
    maxs_lnd  = [1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00]
    
    if pair eq 'f16_f18' then begin ; F16 vs F18 has 19 matched channels, first 5 not matched F16(v) F18(h)
      mins_sea  = [0.50,0.50,0.50,0.50,0.50,0.50,0.25,0.55,0.55,0.30,0.60,0.70,0.40,0.55,0.55,0.55,0.55,0.55,0.55] 
      maxs_sea  = [0.95,0.95,0.95,0.90,0.90,0.90,0.90,0.95,0.95,0.90,0.95,0.95,0.90,0.95,0.95,0.95,0.95,0.95,0.95]
      mins_lnd  = [0.50,0.50,0.70,0.70,0.70,0.70,0.65,0.75,0.75,0.60,0.75,0.70,0.70,0.55,0.55,0.55,0.55,0.55,0.55]
      maxs_lnd  = [1.00,1.00,0.95,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,0.95,0.95,0.95,0.95,0.95,0.95]
    endif

    if pair eq 'n18_npp' or pair eq 'n19_npp' or pair eq 'metopA_npp' or pair eq 'metopB_npp' then begin
      ;              1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16   17   18   19   20   21   22
      mins_sea  = [0.40,0.45,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.60,0.60,0.65,0.65,0.65,0.65,0.65]
      maxs_sea  = [0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95]
      mins_lnd  = [0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.60,0.60,0.60,0.60,0.60,0.60,0.60,0.60]
      maxs_lnd  = [1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00]
      ;              1    2                   6    7         9   10   11    12  13   14   15                        20        22 
      
      ind1 = [1,2,6,7,9,10,11,12,13,14,15,22,20]
      ind0 = ind1-1
      mins_sea = mins_sea(ind0)
      maxs_sea = maxs_sea(ind0)
      mins_lnd = mins_lnd(ind0)  
      maxs_lnd = maxs_lnd(ind0)     
   
    endif
    
    divs_diff  = divs
    fmts_diff  = replicate('(f5.2)',NLEV)
    minYs_diff = replicate(-0.1,NLEV)
    maxYs_diff = replicate(0.1,NLEV)
  
    ;---- default to sea values, then overwrite by land values if necessary
    mins_all = mins_sea
    maxs_all = maxs_sea
    
    for ichan = 0, NCHAN0 - 1 do begin
      if mins_lnd(ichan) lt mins_all(ichan) then mins_all(ichan) = mins_lnd(ichan)
      if maxs_lnd(ichan) gt maxs_all(ichan) then maxs_all(ichan) = maxs_lnd(ichan)
    endfor
    
    ;---- ice and snow use the same ranges as all
    mins_ice = mins_all
    maxs_ice = maxs_all
    
    mins_snw = mins_all
    maxs_snw = maxs_all
    
    minYs = [ [mins_sea], [mins_ice], [mins_lnd], [mins_snw], [mins_all] ]
    maxYs = [ [maxs_sea], [maxs_ice], [maxs_lnd], [maxs_snw], [maxs_all] ]
    
  endif
  
  ;---- ym/ymcorr related: ym-tbu-Uncorrected TB,tbc-ymcorr-Corrected TB-----------------------------
  if prodId eq 'tbu' or prodId eq 'tbc' then begin
  
    level_ids  = chanIds
    level_txts = chanTxts
    NLEV       = NCHAN0
    fmts       = replicate('(I3)',NLEV)	
    divs       = [ 8,  8,  7,  6,  7,   5,  6,  8,  7,  6,   7,  7, 10,  9,  9,   8,  8,  9,  7,  8 ]
    minY1      = [125,125,170,170,200, 200,210,200,180,190, 180,180,180,200,140, 140,140,200,160,140]
    maxY1      = [325,325,310,290,270, 250,240,240,250,250, 250,250,280,290,320, 320,320,290,300,300]
    
    if pair eq 'f16_f18' then begin ; 1-5 not mached, only 6-24 = 19 matched channels
      divs    = [ 5,   5,   8,   8,   7,   7,    9,  6,  8,   8,  8,   8,  8,   6,    7,    6,    7,    7,  10 ]  
      minY1   = [190, 190, 140, 140, 160, 160,  75, 150,140, 100,150, 140,140, 200,  180,  210,  200,  190, 190]
      maxY1   = [240, 240, 300, 300, 300, 300,  300,300,300, 300,310, 300,300, 260,  250,  270,  270,  260, 240]
    endif
    
    if pair eq 'n18_npp' or pair eq 'n19_npp' or pair eq 'metopA_npp' or pair eq 'metopB_npp' then begin
      ;           1   2   6   7   9   10  11 12  13  14  15  22  20 
      divs    = [ 8,  8,  7,  5,  6,  6,  5,  7,  7, 10,  9,  9,  6 ]
      minY1   = [140,140,200,200,200,200,180,180,180,180,200,220,220]
      maxY1   = [300,300,270,250,230,230,230,250,250,280,290,265,280]
    endif
    
    minYs     = [ [minY1], [minY1],[minY1],[minY1],[minY1]]
    maxYs     = [ [maxY1], [maxY1],[maxY1],[maxY1],[maxY1]]
    
    divs_diff  = replicate(10,NLEV)
    fmts_diff  = replicate('(I3)',NLEV)
    minYs_diff = replicate(-15,NLEV)
    maxYs_diff = replicate(15,NLEV)
  
  endif

  ;---- temp related -------------------------------------------------------------------------------
  if prodId eq 'temp' then begin
    NLEV       = 11
    level_ids  = layer_ids
    level_txts = layer_ids
    divs       = [6,  9,  5,  6,  6,  6,  6,  7,  5,  8,  8]
    fmts       = replicate('(I3)',NLEV)
    minY1      = [180,200,200,210,220,225,230,235,235,235,235]
    maxY1      = [240,245,250,270,280,285,290,305,310,315,315]
    minYs      = [ [minY1], [minY1],[minY1],[minY1],[minY1]]
    maxYs      = [ [maxY1], [maxY1],[maxY1],[maxY1],[maxY1]]
    divs_diff  = replicate(10,NLEV)
    fmts_diff  = replicate('(I3)',NLEV)
    minYs_diff = replicate(-6,NLEV)
    maxYs_diff = replicate(6,NLEV)
  endif
  
  ;---- wv related ---------------------------------------------------------------------------------
  if prodId eq 'wv' then begin
    NLEV       = 11
    level_ids  = layer_ids
    divs       = [10,   5,   5,  10,   8,   10,   10,   10,   10,  10,    10]
    fmts       = replicate('(f5.2)',NLEV)
    minY1      = [0.0, 0.0,0.0,0.0,0.0,0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    maxY1      = [0.1, 0.15, 1.5, 4.0, 8.0, 10.0, 15.0, 20.0, 20.0, 20.0, 20.0]
    minYs      = [ [minY1], [minY1],[minY1],[minY1],[minY1]]
    maxYs      = [ [maxY1], [maxY1],[maxY1],[maxY1],[maxY1]]
    divs_diff  = replicate(10,NLEV)
    fmts_diff  = replicate('(f6.2)',NLEV)
    minYs_diff = [-0.05,-0.05,-0.05,-0.05,-1.0,-1.0,-2.0,-2.0,-2.0,-2.0,-2.0]
    maxYs_diff = [0.05,0.05,0.05,0.05,1.0,1.0,2.0,2.0,2.0,2.0,2.0]
  endif

  ;---- vertical bias/stdv distribution --------------
  if prodId eq 'temp' or prodId eq 'wv' then begin
    meanbias_ad = fltarr(4,NLEV) & meanbias_ad(*,*)  = 0.
    meanstdv_ad = fltarr(4,NLEV) & meanstdv_ad(*,*)  = 0.
  endif

  FOR ICEND = 0,NCEND - 1 DO BEGIN ;---- Start ICEND LOOP

    NP2P = NPOINT(ICEND)

    LATS=fltarr(NP2P)
    LONS=fltarr(NP2P)
    SFCS1=fltarr(NP2P)
    SFCS2=fltarr(NP2P)
    SCANPOS=fltarr(NP2P)
    ANGLES=fltarr(NP2P)

    cend = cends(ICEND)
    cendTxt = cendTxts(ICEND)

    ;---- note: lat/lon/sfc/scanpos,are from sat1,shared(collocated)
    file=dirP2p+dataPrefix+satId1+'_'+yyyymmdd+'_lat_'+cend+'.dat'
    openr,lun,file,/get_lun,/Swap_Endian
    readu,lun,LATS
    Free_Lun,Lun

    file=dirP2p+dataPrefix+satId1+'_'+yyyymmdd+'_lon_'+cend+'.dat'
    openr,lun,file,/get_lun,/Swap_Endian
    readu,lun,LONS
    Free_Lun,Lun

    file=dirP2p+dataPrefix+satId1+'_'+yyyymmdd+'_sfc2_'+cend+'.dat'
    openr,lun,file,/get_lun,/Swap_Endian
    readu,lun,SFCS1
    Free_Lun,Lun

    file=dirP2p+dataPrefix+satId2+'_'+yyyymmdd+'_sfc2_'+cend+'.dat'
    openr,lun,file,/get_lun,/Swap_Endian
    readu,lun,SFCS2
    Free_Lun,Lun

    ; scan position starts from 1 thru 30
    file=dirP2p+dataPrefix+satId1+'_'+yyyymmdd+'_scanpos_'+cend+'.dat'
    openr,lun,file,/get_lun,/Swap_Endian
    readu,lun,SCANPOS
    Free_Lun,Lun

    file=dirP2p+dataPrefix+satId1+'_'+yyyymmdd+'_angle_'+cend+'.dat'
    openr,lun,file,/get_lun,/Swap_Endian
    readu,lun,ANGLES
    Free_Lun,Lun
    
    ;---- read variables ----
    vals1 = fltarr(NP2P,NLEV)
    file = dirP2p+dataPrefix+satId1+'_'+yyyymmdd+'_'+prodId+'_'+cend+'.dat'
    openr,lun,file,/get_lun,/Swap_Endian
    readu,lun,vals1
    Free_Lun,Lun

    vals2 = fltarr(NP2P,NLEV)
    file = dirP2p+dataPrefix+satId2+'_'+yyyymmdd+'_'+prodId+'_'+cend+'.dat'
    openr,lun,file,/get_lun,/Swap_Endian
    readu,lun,vals2
    Free_Lun,Lun
    
    ;---- scattered plot ( sea/ice/land/snow/all )--------------------------------------------------
    for ilev = 0,NLEV-1 do begin
    for isfc = 0,NSFC-1 do begin
      if isfc eq (NSFC-1) then ss = where( vals1(*,ilev) gt MISSING and $ 
                                           vals2(*,ilev) gt MISSING,cnt)
      if isfc lt (NSFC-1) then ss = where( vals1(*,ilev) gt MISSING and $
                                           vals2(*,ilev) gt MISSING and $ 
                                           SFCS1 eq isfc and SFCS2 eq isfc,cnt)
      if cnt gt CONT_MIN then begin
        title = cendTxt + sfcTxts(isfc) + ' ' + prodName + ' @ ' + level_txts(ilev)$
              + ' ' + date + ' (V' + version +')'
        img_name=dirImg+prefix_scat + prodId + '_' + level_ids(ilev) + '_' $
                +sfcIds(isfc) + '_' + cend + '.png'
	plot_scatter,minYs(ilev,isfc),maxYs(ilev,isfc),minYs(ilev,isfc),maxYs(ilev,isfc),$
                     (vals1(*,ilev))(ss),(vals2(*,ilev))(ss),$
	             strupcase(satId1),strupcase(satId2),title,img_name,nticks=divs(ilev)
      endif
    endfor
    endfor
    
    ;---- maps ( sea+ice/land+snow/all ) -----------------------------------------------------------
    for ilev = 0,NLEV-1 do begin
    for isfc = 0,2 do begin
      sfc = sfc_ids(isfc)
      if isfc eq 0 then ind = where( vals1(*,ilev) ge 0 and $
                                     vals2(*,ilev) ge 0 and $
                                   ( SFCS1 eq 0 or SFCS1 eq 1 ) and $
                                   ( SFCS2 eq 0 or SFCS2 eq 1 ),cnt)

      if isfc eq 1 then ind = where( vals1(*,ilev) ge 0 and $
                                     vals2(*,ilev) ge 0 and $
                                   ( SFCS1 eq 2 or SFCS1 eq 3 ) and $
                                   ( SFCS2 eq 2 or SFCS2 eq 3 ),cnt)

      if isfc eq 2 then ind = where( vals1(*,ilev) ge 0 and $
                                     vals2(*,ilev) ge 0,cnt )
      if cnt gt CONT_MIN then begin
    	title1=strupcase(satId1) + ' MIRS ' + prodName + ' @ ' + level_txts(ilev) $
              + cendTxt + date + ' (V' + version + ')'
    	title2=strupcase(satId2) + ' MIRS ' + prodName + ' @ ' + level_txts(ilev) $
              + cendTxt + date + ' (V' + version + ')'

	jsfc = 2 * isfc
	img_name = dirImg + prefix1 + yyyymmdd + '_' + prodId + '_' + level_ids(ilev) $
        	 + '_' + sfc + '_' + cend + '.png'
	p2p_plot,latmin,latmax,lonmin,lonmax,minYs(ilev,jsfc),maxYs(ilev,jsfc),$
        	 LATS,LONS,SCANPOS,vals1(*,ilev),ind,fov_scale,title1,unit,$
		 symbol,symbolsize,thck,ioverplot,fmts(ilev),divs(ilev),$
        	 img_name,color_table_index=ctable
	img_name = dirImg + prefix2 + yyyymmdd + '_' + prodId + '_' + level_ids(ilev) $
        	 + '_' + sfc + '_' + cend + '.png'
	p2p_plot,latmin,latmax,lonmin,lonmax,minYs(ilev,jsfc),maxYs(ilev,jsfc),$
                   LATS,LONS,SCANPOS,vals2(*,ilev),ind,fov_scale,title2,unit,$
	           symbol,symbolsize,thck,ioverplot,fmts(ilev),divs(ilev),$
                   img_name,color_table_index=ctable
      endif
    endfor
    endfor
    
    ;---- maps of difference -----------------------------------------------------------------------
    vals=fltarr(NP2P,NLEV)
    vals(*,*) = -999.0
    for ilev = 0L,NLEV - 1L do begin
    for iprf = 0L,NP2P - 1L do begin
      if vals1(iprf,ilev) ge 0 and vals2(iprf,ilev) ge 0 then $
         vals(iprf,ilev) = vals1(iprf,ilev) - vals2(iprf,ilev) 
    endfor
    endfor
    for ilev = 0,NLEV-1 do begin
    for isfc = 0,2 do begin
      sfc = sfc_ids(isfc)
      if isfc eq 0 then ind = where( vals1(*,ilev) ge 0 and vals2(*,ilev) ge 0 $
                              and ( SFCS1 eq 0 or SFCS1 eq 1 ) $
                              and ( SFCS2 eq 0 or SFCS2 eq 1 ),cnt)
      if isfc eq 1 then ind = where( vals1(*,ilev) ge 0 and vals2(*,ilev) ge 0 $
                              and ( SFCS1 eq 2 or SFCS1 eq 3 ) $
                              and ( SFCS2 eq 2 or SFCS2 eq 3 ),cnt)
      if isfc eq 2 then ind = where( vals1(*,ilev) ge 0 and vals2(*,ilev) ge 0,cnt )
      if (cnt gt CONT_MIN) then begin
    	title_diff = 'MIRS ' + strupcase(satId1) + ' - ' + strupcase(satId2) + ' ' + prodName $
                   + ' @ '   + level_txts(ilev)  +  cendTxt + date + ' (V' + version + ')'
	img_name = dirImg + prefix_bias + yyyymmdd + '_' + prodId + '_' + level_ids(ilev) $
                 + '_' + sfc + '_' + cend + '.png'
	p2p_plot,latmin,latmax,lonmin,lonmax,minYs_diff(ilev),maxYs_diff(ilev),$
                 LATS,LONS,SCANPOS,vals(*,ilev),ind,fov_scale,title_diff,unit,$
	         symbol,symbolsize,thck,ioverplot,fmts_diff(ilev),divs_diff(ilev),$
                 img_name,color_table_index=ctable
      endif
    endfor
    endfor
  
    ;---- histogram of difference ------------------------------------------------------------------
    for ilev = 0,NLEV-1 do begin
      
      minY = minYs_diff(ilev)
      maxY = maxYs_diff(ilev)
      
      for isfc = 0, NSFC-1 do begin
	sfcId = sfcIds(isfc)
	sfcTxt = sfcTxts(isfc)
	if isfc lt NSFC-1 then begin
	  ind = where( vals(*,ilev) ge minY and vals(*,ilev) le maxY and SFCS1 eq isfc and SFCS2 eq isfc,cnt )
	endif else begin
          ind = where( vals(*,ilev) ge minY and vals(*,ilev) le maxY and SFCS1 eq SFCS2, cnt ) 
	endelse

	xlength=(maxY-minY)*1.0/(NBINS_HIST*1.0)
	x=findgen(NBINS_HIST)*xlength+minY

	if( cnt gt NBINS_HIST ) then begin ; if-block 1 starts

	  h_bias = vals(ind) 	
	  h=Histogram(h_bias, NBINS=NBINS_HIST)
	  h = h/float(total(h))*100.
	  xrange=[minY ,maxY]
	  mean_bias=mean(h_bias)
	  file_as = dirP2p+'p2p_'+satId1+'_'+satId2+'_hist_'+yyyymmdd+'_'+prodId+'_'+ level_ids(ilev)+'_'+sfcId+'_as.dat'

	  if icend eq 0 then begin ; if-else-block 2 starts

            openw, lunw, file_as, /get_lun
            writeu, lunw, h
            free_lun, lunw
            mean_as = mean_bias

          endif else begin

	    h_ds = h
	    mean_ds = mean_bias
	    
	    is_file_exist = FILE_TEST(file_as)
	    if is_file_exist eq 1 then begin ; if-block 3 starts

      	      openr, lunr, file_as, /get_lun

	      ;Get file status. 
	      status = FSTAT(lunr) 

	      h_as = FLTARR(status.size / 4) 
	      readu, lunr, h_as  
	      free_lun, lunr

	      ; then delete saved ascending stat file 
	      FILE_DELETE, file_as

	      ymax = max([h_as,h_ds])
	      yrange=[0,ymax*1.05]

	      tit = 'MIRS '+strupcase(satId1)+' - '+strupcase(satId2)+' '+prodName+ ' @ '+level_txts(ilev)+' ('+unit+') '+date+' (V'+version +')'
	      xtit = 'Point-to-Point Collocated ' + prodName+' ( '+strupcase(satId1)+' - '+strupcase(satId2)+' ) Over ' + sfcTxt
	      ytit = 'Density (%) Over ' + sfcTxt
	      hist_png = dirImg + prefix_hist + yyyymmdd + '_' + prodId +'_' + level_ids(ilev)+'_'+sfcId + '_ad.png'

	      plot_hist_line2, x, h_as, h_ds, tit, xtit, ytit, hist_png, xrange, yrange, leg_as, leg_ds, mean_as, mean_ds

      	    endif  ; if-block 3 ends

          endelse ; if-else-block 2 ends

	endif ; if-block 1 ends

      endfor
    endfor
    
    ;---- assymmetry angle dependence --------------------------------------------------------------
    xrange=[-60,60]
    xtitle='Local Zenith Angle (degree)'
    if satId1 eq 'f16' or satId1 eq 'f18' then begin
      xrange=[1,30]
      xtitle='Scan Position'
    endif
    
    tmp=fltarr(NBIN,NSFC)
    
    asym=fltarr(NBIN,NSFC,NLEV)
    file=dirP2p+dataPrefix+satId1+'_'+satId2+'_glb_asym_'+yyyymmdd+'_'+prodId+'_'+cend+'.dat'
    openr,lun,file,/get_lun,/Swap_Endian
    for ilev = 0,NLEV-1 do begin
      readu,lun,tmp
      asym(*,*,ilev) = tmp(*,*)
    endfor
    free_lun,lun

    stdv=fltarr(NBIN,NSFC,NLEV)
    file=dirP2p+dataPrefix+satId1+'_'+satId2+'_glb_stdv_'+yyyymmdd+'_'+prodId+'_'+cend+'.dat'
    openr,lun,file,/get_lun,/Swap_Endian
    for ilev = 0,NLEV-1 do begin
      readu,lun,tmp
      stdv(*,*,ilev) = tmp(*,*)
    endfor
    free_lun,lun

    for ilev = 0,NLEV - 1 do begin
      yrange = [ minYs_diff(ilev),maxYs_diff(ilev) ]
      title = 'MIRS ' + strupcase(satId1) + ' - ' + strupcase(satId2) + ' '   + prodName $
            + ' @ '   + level_ids(ilev)   +  ' '  + date + cendTxt    + ' (V' + version  +')'
      ;---- all
      lndsea='all'
      ytitle=prodName + ' @ ' + level_ids(ilev) + ' Bias Over Globe'
      img_name=dirImg+prefix_asym+prodId+'_'+level_ids(ilev)+'_'+lndsea+'_'+cend+'.png'
      plot_line,BIN_BOX,asym(*,NSFC-1,ilev),xtitle,ytitle,title,xrange,yrange,$
                img_name,stdv=stdv(*,NSFC-1,ilev)
      ;---- sea and ice
      lndsea='sea'
      ytitle=prodName + ' @ ' + level_ids(ilev)  + ' Bias Over Sea'
      img_name=dirImg+prefix_asym+prodId+'_'+level_ids(ilev)+'_'+lndsea+'_'+cend+'.png'
      plot_line2,BIN_BOX,asym(*,0,ilev),asym(*,1,ilev),xtitle,ytitle,title,xrange,yrange,$
    		 img_name,'Sea','Sea Ice',stdv1=stdv(*,0,ilev),stdv2=stdv(*,1,ilev)
      ;---- land and snow
      lndsea='lnd'
      ytitle=prodName + ' @ ' + level_ids(ilev)  + ' Bias Over Land'
      img_name=dirImg+prefix_asym+prodId+'_'+level_ids(ilev)+'_'+lndsea+'_'+cend+'.png'
      plot_line2,BIN_BOX,asym(*,2,ilev),asym(*,3,ilev),xtitle,ytitle,title,xrange,yrange,$
        	 img_name,'Land','Snow',stdv1=stdv(*,2,ilev),stdv2=stdv(*,3,ilev)
    endfor
 
    ;---- mean bias/stdv vertical bias distribution ------------------------------------------------
    if prodId eq 'temp' or prodId eq 'wv' then begin
      
      meanbias = fltarr(4,NLEV) & meanbias(*,*)  = -9999.
      meanstdv = fltarr(4,NLEV) & meanstdv(*,*)  = -9999.
      TQ=0
      LWP_CUT = 0.05
      RWP_CUT = 0.05
      if prodId eq 'temp' then xval = 6
      if prodId eq 'wv'   then xval = 100
      yrange=[950,100]
      if prodId eq 'temp' then TQ = 0
      if prodId eq 'wv'   then TQ = 1
      
      LWP1=fltarr(NP2P)
      file=dirP2p+dataPrefix+satId1+'_'+yyyymmdd+'_lwp_'+cend+'.dat'
      openr,lun,file,/get_lun,/Swap_Endian
      readu,lun,LWP1
      close,lun
      Free_Lun,Lun

      LWP2=fltarr(NP2P)
      file=dirP2p+dataPrefix+satId2+'_'+yyyymmdd+'_lwp_'+cend+'.dat'
      openr,lun,file,/get_lun,/Swap_Endian
      readu,lun,LWP2
      close,lun
      Free_Lun,Lun

      RWP1=fltarr(NP2P)
      file=dirP2p+dataPrefix+satId1+'_'+yyyymmdd+'_rwp_'+cend+'.dat'
      openr,lun,file,/get_lun,/Swap_Endian
      readu,lun,RWP1
      close,lun
      Free_Lun,Lun

      RWP2=fltarr(NP2P)
      file=dirP2p+dataPrefix+satId2+'_'+yyyymmdd+'_rwp_'+cend+'.dat'
      openr,lun,file,/get_lun,/Swap_Endian
      readu,lun,RWP2
      close,lun
      Free_Lun,Lun

      for ilev = 0,NLEV - 1 do begin
        var1 = vals1(*,ilev)
	var2 = vals2(*,ilev)
      for isfc = 0,NSFC - 2 do begin
	ind = where( var1  ge 0       and var2       ge 0       and $
                FIX(SFCS1) eq isfc    and FIX(SFCS2) eq isfc    and $
                lwp1       le LWP_CUT and lwp2       le LWP_CUT and $
                rwp1       le RWP_CUT and rwp2       le RWP_CUT,cnt)
	if cnt gt 2 then begin
	  c10 = moment( var1(ind) - var2(ind) )
	  stats1 = c10[0]
	  stats2 = stdev( var1(ind) - var2(ind) )
	  stats8 = mean( var2(ind) ) 
	  if prodId eq 'temp' then begin
	    meanbias(isfc,ilev) = stats1
	    meanstdv(isfc,ilev) = stats2
	  endif else begin
	    meanbias(isfc,ilev) = stats1 / stats8 * 100
	    meanstdv(isfc,ilev) = stats2 / stats8 * 100
	  endelse
	endif  
      endfor
      endfor
      
      meanbias_ad(*,*) = meanbias_ad(*,*) + meanbias(*,*) / 2.0
      meanstdv_ad(*,*) = meanstdv_ad(*,*) + meanstdv(*,*) / 2.0 

      layers     = [100,200,300,400,500,600,700,800,850,900,950]
      yticknames = ['100','200','300','400','500','600','700','800','850','900','950']
      yticknames = REVERSE(yticknames)
      yticks     = N_Elements(yticknames) - 1

      ;---- bias vertical bias distribution
      title='MIRS ' + strupcase(satId1) + ' - ' + strupcase(satId2) + ' ' + prodName $
           + ' Mean Bias Vert. Distri. ' + date + cendTxt + ' (V' + version +')'
      fileImg=dirImg+prefix_corr+yyyymmdd+'_'+prodId+'_mean_vert_'+cend+'.png'
      xrange=[-xval,xval]
      plot_line4,meanbias(0,*),meanbias(1,*),meanbias(2,*),meanbias(3,*),layers,$
                 'Mean Bias ('+unit+')','Pressure (mb)',title,xrange,yrange,fileImg,$
                 sfcTxts(0),sfcTxts(1),sfcTxts(2),sfcTxts(3),1,yticknames,yticks,TQ

      ;---- stdv vertical bias distribution
      title='MIRS ' + strupcase(satId1)  + ' - ' + strupcase(satId2) + ' ' + prodName $
           + ' STDV Vert. Distri. ' + date + cendTxt + ' (V' + version +')'
      fileImg=dirImg+prefix_corr+yyyymmdd+'_'+prodId+'_stdv_vert_'+cend+'.png'
      xrange=[0,xval]
      plot_line4,meanstdv(0,*),meanstdv(1,*),meanstdv(2,*),meanstdv(3,*),layers,$
                 'Standard Deviation', 'Pressure (mb)',title,xrange,yrange,fileImg,$
                 sfcTxts(0),sfcTxts(1),sfcTxts(2),sfcTxts(3),0,yticknames,yticks,TQ
    endif

  ENDFOR ;---- END ICEN LOOP
  
  ;---- to plot combined bias/stdv vertical distribution
  if prodId eq 'temp' or prodId eq 'wv' then begin
      if prodId eq 'temp' then xval = 6
      if prodId eq 'wv'   then xval = 100
      yrange=[950,100]
      if prodId eq 'temp' then TQ = 0
      if prodId eq 'wv'   then TQ = 1
     
      title='MIRS ' + strupcase(satId1) + ' - ' + strupcase(satId2) + ' ' + prodName $
      	   + ' Mean Bias Vert. Distri. ' + date + cendTxts(2) + ' (V' + version +')'
      fileImg=dirImg+prefix_corr+yyyymmdd+'_'+prodId+'_mean_vert_'+cends(2)+'.png'
      xrange=[-xval,xval]
      plot_line4,meanbias_ad(0,*),meanbias_ad(1,*),meanbias_ad(2,*),meanbias_ad(3,*),layers,$
                 'Mean Bias ('+unit+')','Pressure (mb)',title,xrange,yrange,fileImg,$
                 sfcTxts(0),sfcTxts(1),sfcTxts(2),sfcTxts(3),1,yticknames,yticks,TQ

      title='MIRS ' + strupcase(satId1)  + ' - ' + strupcase(satId2) + ' ' + prodName $
           + ' STDV Vert. Distri. ' + date + cendTxts(2) + ' (V' + version +')'
      fileImg=dirImg+prefix_corr+yyyymmdd+'_'+prodId+'_stdv_vert_'+cends(2)+'.png'
      xrange=[0,xval]
      plot_line4,meanstdv_ad(0,*),meanstdv_ad(1,*),meanstdv_ad(2,*),meanstdv_ad(3,*),layers,$
                 'Standard Deviation','Pressure (mb)',title,xrange,yrange,fileImg,$
                 sfcTxts(0),sfcTxts(1),sfcTxts(2),sfcTxts(3),0,yticknames,yticks,TQ
  endif
  

ENDFOR ;---- END IPROD LOOP



END
